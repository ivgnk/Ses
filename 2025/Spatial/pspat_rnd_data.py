"""
pspat_rnd_data.py
Случайные данные для тестирования
"""
the_rnd_data = [
[4.71450138, 6.76299688],
[0.47643319, 5.92375588],
[1.4014354,  6.49948765],
[1.37762992, 5.5943139 ],
[1.84476149, 6.28887973],
[3.38431439, 7.01531073],
[1.5818634,  7.58122304],
[0.15408531, 6.56713274],
[0.20754924, 6.20617893],
[-0.3232187,   5.59183087],
[-0.68636267,  6.995248],
[1.20476729, 5.62090522],
[-0.71707408,  4.93780287],
[0.46688615, 4.35559661],
[1.16449102, 7.8348509 ],
[0.84322195, 5.33111422],
[-0.52031125,  5.51112567],
[-0.53290471,  7.4382645 ],
[1.86941491, 7.59513237],
[-1.37415024,  5.43968372],
[0.80984254, 7.37274623],
[2.34494296, 7.5917715 ],
[-1.52839762,  5.39062575],
[-0.368627,   5.0942371],
[1.04720188, 8.49365758],
[0.46817981, 5.8892258 ],
[-2.69556623,  5.33295576],
[-0.62524397,  5.42207156],
[-0.18568541,  6.74306702],
[0.08319394, 5.7343982 ],
[-1.73412657,  4.39773677],
[2.71068974, 8.75944285],
[1.39440644, 7.42311631],
[2.60306226, 7.44798234],
[0.69486063, 5.74714173],
[0.85035857, 5.77322612],
[-0.08126081,  7.27487859],
[-0.91543096,  6.53596044],
[1.20229192, 6.78660819],
[-2.83728854,  3.47790785],
[-1.2721832,  7.2809845],
[0.6213349,  5.91842178],
[-1.01725775,  5.61283878],
[0.49485165, 6.65049095],
[0.57278951, 6.24130801],
[ 2.36866006, -1.16776631],
[ 1.26865391, -0.4495718 ],
[ 1.22749102, -1.26538298],
[1.67868142, 0.08538968],
[0.10909979, 2.77743111],
[1.77751159, 0.67544996],
[ 0.48884527, -0.58622492],
[1.25772941, 1.78133885],
[ 2.23726543, -1.94408363],
[ 2.24009525, -1.82002817],
[1.28309399, 0.56171399],
[ 2.75694041, -0.15249387],
[1.66339546, 0.42194997],
[ 1.84341804, -0.45317484],
[2.36270832, 0.28945855],
[0.3382875,  0.50241489],
[ 2.03945158, -1.80050141],
[1.79093803, 0.17974658],
[2.23340903, 1.44739971],
[ 2.32873521, -2.17191031],
[2.42616525, 1.13156338],
[-0.01362848,  1.89679058],
[ 2.04535725, -1.50534671],
[ 4.22573228, -0.31859722],
[1.72659091, 1.5636252],
[ 3.63551502, -0.39204068],
[ 1.74226814, -0.56544569],
[ 2.29614433, -0.65463379],
[ 3.12676038, -2.25029034],
[ 1.52388722, -0.43715876],
[8.90559619, 1.16455059],
[4.32422165, 3.99213514],
[5.90069481, 4.06040059],
[2.17986726, 2.87632464],
[6.77993836, 4.05366093],
[8.04355487, 5.33270156],
[8.24284988, 6.21317773],
[10.06958881,  3.44075442],
[7.984954,   2.53305706],
[4.81181747, 4.28837792],
[5.58894104, 2.92271975],
[5.96436426, 4.35774688],
[5.07037756, 3.6022168 ],
[6.23923039, 4.38987117],
[10.55709473,  3.69815835],
[5.46408252, 3.10055485],
[5.60155561, 3.95336463],
[13.14362658,  5.60976644],
[4.55551503, 3.88226939],
[8.44337057, 3.03287075],
[8.00865259, 5.0334512 ],
[8.51173402, 4.89871986],
[4.67059811, 4.31405309],
[5.77933856, 3.06678134],
[8.53249746, 4.35548324],
]

from math import hypot

def cntr_data():
    ll = len(the_rnd_data)
    print(f'{len(the_rnd_data)=}')
    mmin,mmax=float('inf'),-float('inf')
    for i in range(ll):
        for j in range(ll):
            if i !=j:
                hyp=hypot(the_rnd_data[i][0]-the_rnd_data[j][0], the_rnd_data[i][1]-the_rnd_data[j][1])
                mmin = min(mmin, hyp)
                mmax = max(mmax, hyp)
                print(f'{i:3} {j:3} {hyp:.4f}')
    print(f'{mmin=}')
    print(f'{mmax=}')



if __name__=="__main__":
    cntr_data()
